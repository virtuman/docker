
server {
    listen 443 deferred http2 ssl; ## listen for ipv4; this line is default and implied
    listen [::]:443 deferred http2 ssl default ipv6only=on; ## listen for ipv6

    ssl on;

    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/nginx/ssl/example.com.dhparam.pem;

    # =========================================================================
    # ngx_pagespeed

    pagespeed MapOriginDomain "http://example.com" "https://example.com";
    pagespeed LoadFromFile "https://example.com" "/app/www/";

    # =========================================================================


    server_name _;

    access_log  /var/log/nginx/$host-access.log main_ext;
#   error_log /var/log/nginx/$host-error.log warn;

    set $rootdir /var/www/$host;

    if (-d /var/www/$host/public_html) {
        set $rootdir /var/www/$host/web;
    }
    if (-d /var/www/$host/public_html) {
        set $rootdir /var/www/$host/public_html;
    }
    if (-d /var/www/$host/app/webroot) {
        set $rootdir /var/www/$host/app/webroot;
    }
    if (-d /var/www/$host/webroot) {
        set $rootdir /var/www/$host/webroot;
    }

    root $rootdir;


    if ($host ~* '^[\w,-]+.\w+$' ) {
        rewrite ^/(.*)$ http://www.$host/$1 permanent;
    }

    include common/pagespeed.conf;
    include common/locations.conf;
    include common/static_to_handler.conf;

    location / {
        index index.html index.php;
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ @handler;
    }

    location /admin/ {
        if (-d $rootdir/admin) {
            rewrite ^/(.*)$ /admin/index.php?q=$1 last;
        }
        try_files $uri $uri/ @handler;
    }

    location @handler { ## Magento, wordpress, drupal use common front handler
        rewrite .* /index.php;
    }

    location ~ \.php$ {
        more_clear_headers x-powered-by;
limit_req zone=default burst=5 nodelay;
fastcgi_param   WP_ENV $env_name;
        include common/php-www.conf;
    }


    # Enable ocsp stapling
    # OSCP is a mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving,
    # scalable manner
    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    #
    # resolver 8.8.4.4 8.8.8.8;
    # resolver_timeout 10s;
    # ssl_stapling on;
    # ssl_trusted_certificate /etc/nginx/ssl/trusted_certificate.pem;

    # HSTS (HTTP Strict Transport Security)
    # https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    #
    #  ** ONLY ENABLE WHEN -EVERYTHING- TESTS OKAY **
    #
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    # enabling Public Key Pinning Extension for HTTP (HPKP)
    # https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning
    # to generate use one of these:
    # $ openssl rsa  -in my-website.key -outform der -pubout | openssl dgst -sha256 -binary | base64
    # $ openssl req  -in my-website.csr -pubkey -noout | openssl rsa -pubin -outform der | openssl dgst -sha256 -binary | base64
    # $ openssl x509 -in my-website.crt -pubkey -noout | openssl rsa -pubin -outform der | openssl dgst -sha256 -binary | base64
    #
    # add_header Public-Key-Pins 'pin-sha256="base64+info1="; max-age=31536000' always;

}
